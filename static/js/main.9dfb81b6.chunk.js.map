{"version":3,"sources":["container/Container.module.css","container/Container.jsx","ContactForm/ContactForm.jsx","Contact/Contact.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleInputChange","e","currentTurget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","reset","this","form","onChange","inputContactForm","type","pattern","title","required","btnContactForm","Component","Contact","ContactList","contacts","onDeleteContact","list","map","item","buttonDelete","onClick","propType","PropTypes","string","Filter","textFilter","inputFilter","App","baseContact","filter","formSubmitHandler","data","some","element","toLocaleLowerCase","alert","getVisibleContact","contactFilter","includes","deleteContact","contactId","prevState","changeFilter","currentTarget","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dfb81b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Wgmrl\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTurget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4,\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { handleInputChange, handleSubmit } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            onChange={handleInputChange}\r\n            className={s.inputContactForm}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            onChange={handleInputChange}\r\n            className={s.inputContactForm}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btnContactForm}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nexport default function Contact({ name, number }) {\r\n  return (\r\n    <>\r\n      <p className={s.name}>{name}</p>\r\n      <p className={s.number}>{number}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nContact.propType = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.item} key={id}>\r\n          <Contact name={name} number={number} />\r\n\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.textFilter}>\r\n      Find Contact by name\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\n// ===========================================\nimport Container from \"./container/Container\";\n// ===========================================\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport baseContact from \"./json/contact.json\";\n// ===========================================\nimport ContactList from \"./ContactList/ContactList\";\n// ===========================================\nimport Filter from \"./Filter/Filter\";\n// ===========================================\n\nclass App extends Component {\n  state = {\n    contacts: baseContact,\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    if (\n      this.state.contacts.some(\n        (element) =>\n          element.name.toLocaleLowerCase() === data.name.toLocaleLowerCase()\n      )\n    ) {\n      return alert(\"We have this contact\");\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const contactFilter = filter.toLocaleLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(contactFilter)\n    );\n  };\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { formSubmitHandler, deleteContact, changeFilter } = this;\n    const getVisibleContacts = this.getVisibleContact();\n    const { filter } = this.state;\n    return (\n      <Container>\n        <h1 className=\"title\">PhoneBook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <Filter value={filter} onChange={changeFilter} />\n\n        <h2 className=\"contactTitle\">Contacts</h2>\n        <ContactList\n          contacts={getVisibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}