{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Contact/Contact.module.css","Filter/Filter.module.css","container/Container.module.css","container/Container.jsx","ContactForm/ContactForm.jsx","Contact/Contact.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","reset","this","form","contactFormLabel","onChange","inputContactForm","type","pattern","title","required","btnContactForm","Component","Contact","ContactList","contacts","onDeleteContact","list","map","item","buttonDelete","onClick","propType","PropTypes","string","Filter","textFilter","inputFilter","App","baseContact","filter","formSubmitHandler","data","some","element","toLocaleLowerCase","alert","getVisibleContact","contactFilter","includes","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a20670e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__O-O_f\",\"btnContactForm\":\"ContactForm_btnContactForm__3fcLD\",\"inputContactForm\":\"ContactForm_inputContactForm__3ZhaB\",\"contactFormLabel\":\"ContactForm_contactFormLabel__1es57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1ZyVk\",\"buttonDelete\":\"ContactList_buttonDelete__sbHr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__1iVWc\",\"number\":\"Contact_number__1kzbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFilter\":\"Filter_textFilter__1xqNC\",\"inputFilter\":\"Filter_inputFilter__1np1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Wgmrl\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    const contact = {\n      id: uuidv4,\n      name,\n      number,\n    };\n\n    this.props.onSubmit(contact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { handleInputChange, handleSubmit } = this;\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.contactFormLabel}>\n          Name\n          <input\n            onChange={handleInputChange}\n            className={s.inputContactForm}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.contactFormLabel}>\n          Number\n          <input\n            onChange={handleInputChange}\n            className={s.inputContactForm}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btnContactForm}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <p className={s.name}>{name}</p>\n      <p className={s.number}>{number}</p>\n    </>\n  );\n}\n\nContact.propType = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport Contact from '../Contact/Contact';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n\n          <button\n            className={s.buttonDelete}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.textFilter}>\n      Find Contact by name\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from 'react';\n// ===========================================\nimport Container from './container/Container';\n// ===========================================\nimport ContactForm from './ContactForm/ContactForm';\nimport baseContact from './json/contact.json';\n// ===========================================\nimport ContactList from './ContactList/ContactList';\n// ===========================================\nimport Filter from './Filter/Filter';\n// ===========================================\n\nclass App extends Component {\n  state = {\n    contacts: baseContact,\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    if (\n      this.state.contacts.some(\n        element =>\n          element.name.toLocaleLowerCase() === data.name.toLocaleLowerCase(),\n      )\n    ) {\n      return alert('We have this contact');\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const contactFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(contactFilter),\n    );\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { formSubmitHandler, deleteContact, changeFilter } = this;\n    const getVisibleContacts = this.getVisibleContact();\n    const { filter } = this.state;\n    return (\n      <Container>\n        <h1 className=\"title\">PhoneBook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <Filter value={filter} onChange={changeFilter} />\n\n        <h2 className=\"contactTitle\">Contacts</h2>\n        <ContactList\n          contacts={getVisibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}